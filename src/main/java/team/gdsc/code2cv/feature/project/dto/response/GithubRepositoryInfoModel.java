package team.gdsc.code2cv.feature.project.dto.response;

import java.time.LocalDateTime;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;

public record GithubRepositoryInfoModel(
	@JsonProperty("id") long id,
	@JsonProperty("node_id") String nodeId,
	String name,
	@JsonProperty("full_name") String fullName,
	Owner owner,
	@JsonProperty("private") boolean isPrivate,
	@JsonProperty("html_url") String htmlUrl,
	String description,
	boolean fork,
	String url,
	@JsonProperty("archive_url") String archiveUrl,
	@JsonProperty("assignees_url") String assigneesUrl,
	@JsonProperty("blobs_url") String blobsUrl,
	@JsonProperty("branches_url") String branchesUrl,
	@JsonProperty("collaborators_url") String collaboratorsUrl,
	@JsonProperty("comments_url") String commentsUrl,
	@JsonProperty("commits_url") String commitsUrl,
	@JsonProperty("compare_url") String compareUrl,
	@JsonProperty("contents_url") String contentsUrl,
	@JsonProperty("contributors_url") String contributorsUrl,
	@JsonProperty("deployments_url") String deploymentsUrl,
	@JsonProperty("downloads_url") String downloadsUrl,
	@JsonProperty("events_url") String eventsUrl,
	@JsonProperty("forks_url") String forksUrl,
	@JsonProperty("git_commits_url") String gitCommitsUrl,
	@JsonProperty("git_refs_url") String gitRefsUrl,
	@JsonProperty("git_tags_url") String gitTagsUrl,
	@JsonProperty("git_url") String gitUrl,
	@JsonProperty("issue_comment_url") String issueCommentUrl,
	@JsonProperty("issue_events_url") String issueEventsUrl,
	@JsonProperty("issues_url") String issuesUrl,
	@JsonProperty("keys_url") String keysUrl,
	@JsonProperty("labels_url") String labelsUrl,
	@JsonProperty("languages_url") String languagesUrl,
	@JsonProperty("merges_url") String mergesUrl,
	@JsonProperty("milestones_url") String milestonesUrl,
	@JsonProperty("notifications_url") String notificationsUrl,
	@JsonProperty("pulls_url") String pullsUrl,
	@JsonProperty("releases_url") String releasesUrl,
	@JsonProperty("ssh_url") String sshUrl,
	@JsonProperty("stargazers_url") String stargazersUrl,
	@JsonProperty("statuses_url") String statusesUrl,
	@JsonProperty("subscribers_url") String subscribersUrl,
	@JsonProperty("subscription_url") String subscriptionUrl,
	@JsonProperty("tags_url") String tagsUrl,
	@JsonProperty("teams_url") String teamsUrl,
	@JsonProperty("trees_url") String treesUrl,
	@JsonProperty("clone_url") String cloneUrl,
	@JsonProperty("mirror_url") String mirrorUrl,
	@JsonProperty("hooks_url") String hooksUrl,
	@JsonProperty("svn_url") String svnUrl,
	String homepage,
	String language,
	@JsonProperty("forks_count") int forksCount,
	@JsonProperty("stargazers_count") int stargazersCount,
	@JsonProperty("watchers_count") int watchersCount,
	int size,
	@JsonProperty("default_branch") String defaultBranch,
	@JsonProperty("open_issues_count") int openIssuesCount,
	@JsonProperty("is_template") boolean isTemplate,
	List<String> topics,
	@JsonProperty("has_issues") boolean hasIssues,
	@JsonProperty("has_projects") boolean hasProjects,
	@JsonProperty("has_wiki") boolean hasWiki,
	@JsonProperty("has_pages") boolean hasPages,
	@JsonProperty("has_downloads") boolean hasDownloads,
	boolean archived,
	boolean disabled,
	String visibility,
	@JsonProperty("pushed_at") LocalDateTime pushedAt,
	@JsonProperty("created_at") LocalDateTime createdAt,
	@JsonProperty("updated_at") LocalDateTime updatedAt,
	Permissions permissions,
	@JsonProperty("allow_rebase_merge") boolean allowRebaseMerge,
	@JsonProperty("template_repository") Object templateRepository,
	@JsonProperty("temp_clone_token") String tempCloneToken,
	@JsonProperty("allow_squash_merge") boolean allowSquashMerge,
	@JsonProperty("allow_auto_merge") boolean allowAutoMerge,
	@JsonProperty("delete_branch_on_merge") boolean deleteBranchOnMerge,
	@JsonProperty("allow_merge_commit") boolean allowMergeCommit,
	@JsonProperty("subscribers_count") int subscribersCount,
	@JsonProperty("network_count") int networkCount,
	License license,
	int forks,
	@JsonProperty("open_issues") int openIssues,
	int watchers
) {
	public record Owner(
		String login,
		long id,
		@JsonProperty("node_id") String nodeId,
		@JsonProperty("avatar_url") String avatarUrl,
		@JsonProperty("gravatar_id") String gravatarId,
		String url,
		@JsonProperty("html_url") String htmlUrl,
		@JsonProperty("followers_url") String followersUrl,
		@JsonProperty("following_url") String followingUrl,
		@JsonProperty("gists_url") String gistsUrl,
		@JsonProperty("starred_url") String starredUrl,
		@JsonProperty("subscriptions_url") String subscriptionsUrl,
		@JsonProperty("organizations_url") String organizationsUrl,
		@JsonProperty("repos_url") String reposUrl,
		@JsonProperty("events_url") String eventsUrl,
		@JsonProperty("received_events_url") String receivedEventsUrl,
		String type,
		@JsonProperty("site_admin") boolean siteAdmin
	) {
	}

	public record Permissions(
		boolean admin,
		boolean push,
		boolean pull
	) {
	}

	public record License(
		String key,
		String name,
		String url,
		@JsonProperty("spdx_id") String spdxId,
		@JsonProperty("node_id") String nodeId,
		@JsonProperty("html_url") String htmlUrl
	) {
	}
}
